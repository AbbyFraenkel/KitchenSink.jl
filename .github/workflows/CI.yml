name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        julia-version: ['1.6', '1.7', '1.8', 'nightly']
        allow_failures:
          - julia-version: 'nightly'
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Julia
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}

      - name: Cache Julia artifacts
        uses: actions/cache@v2
        with:
          path: |
            ~/.julia/artifacts
            ~/.julia/packages
            ~/.julia/registries
          key: ${{ runner.os }}-julia-${{ matrix.julia-version }}-${{ hashFiles('**/Manifest.toml') }}
          restore-keys: |
            ${{ runner.os }}-julia-${{ matrix.julia-version }}-

      - name: Cache Julia compiled packages
        uses: actions/cache@v2
        with:
          path: ~/.julia/compiled
          key: ${{ runner.os }}-julia-${{ matrix.julia-version }}-compiled-${{ hashFiles('**/Manifest.toml') }}
          restore-keys: |
            ${{ runner.os }}-julia-${{ matrix.julia-version }}-compiled-

      - name: Install dependencies
        run: julia --project=@. -e 'using Pkg; Pkg.instantiate()'

      - name: Format Julia code
        run: julia --project=@. -e 'using JuliaFormatter; format(".")'

      - name: Run tests
        run: julia --project=@. -e 'using Pkg; Pkg.test(coverage=true)'

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

  draft_release_notes:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Draft Release Notes
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}